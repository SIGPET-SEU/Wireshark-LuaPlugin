---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ylx.
--- DateTime: 2024/8/24 8:19
---

local string_r = require('utils.string_r')

local function test_table_size()
    local t = {a=1, b="a"}
    assert(string_r.table_size(t) == 2, "Table size should be 2.")
    t = {}
    assert(string_r.table_size(t) == 0, "Table size should be 0.")
end

local function test_table_eq()
    local t1 = {a=1, b="a"}
    local t2 = {a=1, b="a"}
    assert(string_r.table_eq(t1, t2), "Two tables should be equal")

    t1 = {b="a"}
    t2 = {a=1, b="a"}
    assert(string_r.table_eq(t1, t2) == false, "Two tables should not be equal")
end

local function test_sequence_eq()
    local t1 = {'a', 'b', 'c'}
    local t2 = {'a', 'b', 'c'}
    assert(string_r.sequence_eq(t1, t2), "Two seqs should be equal")

    t1 = {"abc", "xyz", "jkl"}
    t2 = {"abc", "xyz", "jkl"}
    assert(string_r.sequence_eq(t1, t2), "Two seqs should be equal")

    t1 = {"a", "xyz", "jkl"}
    t2 = {"abc", "xyz", "jkl"}
    assert(not string_r.sequence_eq(t1, t2), "Two seqs should not be equal")
end

local function test_find_all()
    local s="honewaidoneaeifjoneaowieone"
    local seq = string_r.find_all(s, "one")
    local target = {2, 9, 17, 25}
    assert(string_r.sequence_eq(target, seq))
end

local function test_print_table()
    string_r.print_table({x=5, y='a'})
    print()
end

local function test_print_seq()
    string_r.print_seq({1, 'a', "abc", 777})
    print()
end

test_table_size()

test_table_eq()

test_sequence_eq()

test_find_all()

--test_print_table()
--
--test_print_seq()